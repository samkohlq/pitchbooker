{"version":3,"sources":["../../src/controllers/pitchController.js"],"names":["Sequelize","require","createPitch","req","res","Promise","all","Pitch","create","name","body","pricePerHour","address","maxNumPlayersPerSide","ProviderId","providerId","Provider","findOne","where","id","newPitch","associatedProvider","setProvider","send","retrievePitches","query","findByPk","provider","getPitches","pitches","startDateTime","Date","endDateTime","Booking","findAll","attributes","bookingStartDateTime","Op","gte","bookingEndDateTime","lte","pitchIdsBookedAtTimeslot"],"mappings":";;;;;;;AAAA;;;;;;;;;;;;;;;;AACA,IAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AAEO,IAAMC,WAAW;AAAA,qEAAG,iBAAOC,GAAP,EAAYC,GAAZ;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACoBC,OAAO,CAACC,GAAR,CAAY,CACvDC,cAAMC,MAAN,CAAa;AACXC,cAAAA,IAAI,EAAEN,GAAG,CAACO,IAAJ,CAASD,IADJ;AAEXE,cAAAA,YAAY,EAAER,GAAG,CAACO,IAAJ,CAASC,YAFZ;AAGXC,cAAAA,OAAO,EAAET,GAAG,CAACO,IAAJ,CAASE,OAHP;AAIXC,cAAAA,oBAAoB,EAAEV,GAAG,CAACO,IAAJ,CAASG,oBAJpB;AAKXC,cAAAA,UAAU,EAAEX,GAAG,CAACO,IAAJ,CAASK;AALV,aAAb,CADuD,EAQvDC,iBAASC,OAAT,CAAiB;AACfC,cAAAA,KAAK,EAAE;AACLC,gBAAAA,EAAE,EAAEhB,GAAG,CAACO,IAAJ,CAASK;AADR;AADQ,aAAjB,CARuD,CAAZ,CADpB;;AAAA;AAAA;AAAA;AAClBK,YAAAA,QADkB;AACRC,YAAAA,kBADQ;AAAA;AAAA,mBAenBD,QAAQ,CAACE,WAAT,CAAqBD,kBAArB,CAfmB;;AAAA;AAgBzBjB,YAAAA,GAAG,CAACmB,IAAJ,CAASH,QAAT;;AAhByB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAXlB,WAAW;AAAA;AAAA;AAAA,GAAjB;;;;AAmBA,IAAMsB,eAAe;AAAA,sEAAG,kBAAOrB,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACzBD,GAAG,CAACsB,KAAJ,CAAUV,UADe;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAEJC,iBAASU,QAAT,CAAkBvB,GAAG,CAACsB,KAAJ,CAAUV,UAA5B,CAFI;;AAAA;AAErBY,YAAAA,QAFqB;AAAA;AAAA,mBAGLA,QAAQ,CAACC,UAAT,EAHK;;AAAA;AAGrBC,YAAAA,OAHqB;AAI3BzB,YAAAA,GAAG,CAACmB,IAAJ,CAASM,OAAT;AAJ2B;AAAA;;AAAA;AAMrBC,YAAAA,aANqB,GAML,IAAIC,IAAJ,CAAS5B,GAAG,CAACsB,KAAJ,CAAUK,aAAnB,CANK;AAOrBE,YAAAA,WAPqB,GAOP,IAAID,IAAJ,CAAS5B,GAAG,CAACsB,KAAJ,CAAUO,WAAnB,CAPO;AAAA;AAAA,mBAQYC,gBAAQC,OAAR,CAAgB;AACrDC,cAAAA,UAAU,EAAE,CAAC,SAAD,CADyC;AAErDjB,cAAAA,KAAK,EAAE;AACLkB,gBAAAA,oBAAoB,sBACjBpC,SAAS,CAACqC,EAAV,CAAaC,GADI,EACER,aADF,CADf;AAILS,gBAAAA,kBAAkB,sBACfvC,SAAS,CAACqC,EAAV,CAAaG,GADE,EACIR,WADJ;AAJb;AAF8C,aAAhB,CARZ;;AAAA;AAQrBS,YAAAA,wBARqB;AAmB3BrC,YAAAA,GAAG,CAACmB,IAAJ,CAASkB,wBAAT;;AAnB2B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfjB,eAAe;AAAA;AAAA;AAAA,GAArB","sourcesContent":["import { Booking, Pitch, Provider } from \"../db/models\";\r\nconst Sequelize = require(\"sequelize\");\r\n\r\nexport const createPitch = async (req, res) => {\r\n  const [newPitch, associatedProvider] = await Promise.all([\r\n    Pitch.create({\r\n      name: req.body.name,\r\n      pricePerHour: req.body.pricePerHour,\r\n      address: req.body.address,\r\n      maxNumPlayersPerSide: req.body.maxNumPlayersPerSide,\r\n      ProviderId: req.body.providerId\r\n    }),\r\n    Provider.findOne({\r\n      where: {\r\n        id: req.body.providerId\r\n      }\r\n    })\r\n  ]);\r\n  await newPitch.setProvider(associatedProvider);\r\n  res.send(newPitch);\r\n};\r\n\r\nexport const retrievePitches = async (req, res) => {\r\n  if (req.query.providerId) {\r\n    const provider = await Provider.findByPk(req.query.providerId);\r\n    const pitches = await provider.getPitches();\r\n    res.send(pitches);\r\n  } else {\r\n    const startDateTime = new Date(req.query.startDateTime);\r\n    const endDateTime = new Date(req.query.endDateTime);\r\n    const pitchIdsBookedAtTimeslot = await Booking.findAll({\r\n      attributes: [\"PitchId\"],\r\n      where: {\r\n        bookingStartDateTime: {\r\n          [Sequelize.Op.gte]: startDateTime\r\n        },\r\n        bookingEndDateTime: {\r\n          [Sequelize.Op.lte]: endDateTime\r\n        }\r\n      }\r\n    });\r\n    res.send(pitchIdsBookedAtTimeslot);\r\n  }\r\n};\r\n"],"file":"pitchController.js"}